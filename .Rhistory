locations = cells_body(
columns = Variables
)
) %>%
tab_style( # For Numeric Columns
style = list(
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
),
cell_text(
font = "Franklin Gothic Condensed",
weight = "lighter"
)
),
locations = cells_body(
columns = c("Lower-risk", "Typical", "Higher-risk")
)
) %>%
tab_options(
heading.background.color = "#00548b",          #background color for title
heading.border.bottom.color = "#00548b",       #border between title and column names
column_labels.border.bottom.color = "#00548b", #border between column names and contents
column_labels.border.bottom.style = "solid",   #border type
column_labels.border.bottom.width = px(2),     #border width, set in 2
row_group.padding = px(3),                     #cell height for row groups
table.font.size = "10px",                      #general font size table wide otherwise specified
data_row.padding = px(3)                       #cell height for general contents
) %>%
opt_table_outline(style = "solid", width = px(2.5), color = "#00548b") %>%  #table outline
gtsave(filename = "tab27.pdf") # save gt into working directory
}
gt_table27(result_origination_balance, result_collateral_value, result_property_type,
result_census_regions, result_origination_year)
gt_table27 <- function(...){
x <- list(...)
# Bind every provide table by row
raw_result <- rbind(...)
# Round to 4, and convert it percentage
raw_result[, 2:4] <- round(raw_result[, 2:4], 4)*100
# gt final table
raw_result %>%
group_by(Subtitle) %>%
gt() %>%
tab_header( # Title
title = "Table 27. Summary statistics of selected variables in the portfolios of hypothetical CRE loans",
subtitle = "Percent as a share of utilized balance, except as noted"
) %>%
cols_width( # Set width of each columns
Variables ~ px(283),
ends_with("k") ~ px(94.5),
Typical ~ px(94.5)
) %>%
cols_align_decimal( # Align numbers by decimal point
columns = c("Lower-risk", "Typical", "Higher-risk"),
dec_mark = "."
) %>%
cols_align( # Align numbers to the center.
align = "center",
columns = c("Lower-risk", "Typical", "Higher-risk")
) %>%
tab_style( # for main title
style = list(
cell_text(
font = "Franklin Gothic",
align = "left",
size = "12px",
)
),
locations = cells_title(
groups = "title"
)
) %>%
tab_style( # for subtitle
style = list(
cell_text(
font = "Franklin Gothic",
align = "left",
size = "10px",
)
),
locations = cells_title(
groups = "subtitle"
)
) %>%
tab_style( # Column Names
style = list(
cell_text(
font = "Franklin Gothic Condensed",
size = "10px",
align = "center",
v_align = "bottom",
weight = "bolder"
),
cell_borders(
sides = "left",
color = "#00548b",
weight = px(1)
),
cell_fill(
color = "#e6e7e9"
)
),
locations = cells_column_labels(columns = c("Variables", "Lower-risk", "Typical",
"Higher-risk"))
) %>%
tab_style( # For Row Groups
style = list(
cell_text(
font = "Franklin Gothic Condensed",
size = "11px",
color = "#2f6195",
weight = "bolder",
indent = "6px"),
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
)
),
locations = cells_row_groups(groups = raw_result$Subtitle)
) %>%
tab_style( # For Variables Column
style = list(
cell_text(
weight = "lighter",
indent = "16px"
),
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
),
cell_text(
font = "Franklin Gothic Condensed"
)
),
locations = cells_body(
columns = Variables
)
) %>%
tab_style( # For Numeric Columns
style = list(
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
),
cell_text(
font = "Franklin Gothic Condensed",
weight = "lighter"
)
),
locations = cells_body(
columns = c("Lower-risk", "Typical", "Higher-risk")
)
) %>%
tab_options(
heading.background.color = "#00548b",          #background color for title
heading.border.bottom.color = "#00548b",       #border between title and column names
column_labels.border.bottom.color = "#00548b", #border between column names and contents
column_labels.border.bottom.style = "solid",   #border type
column_labels.border.bottom.width = px(2),     #border width, set in 2
row_group.padding = px(3),                     #cell height for row groups
table.font.size = "10px",                      #general font size table wide otherwise specified
data_row.padding = px(3)                       #cell height for general contents
) %>%
opt_table_outline(style = "solid", width = px(2.5), color = "#00548b")# %>%  #table outline
#gtsave(filename = "tab27.html") # save gt into working directory
}
gt_table27(result_origination_balance, result_collateral_value, result_property_type,
result_census_regions, result_origination_year)
gt_table27 <- function(...){
x <- list(...)
# Bind every provide table by row
raw_result <- rbind(...)
# Round to 4, and convert it percentage
raw_result[, 2:4] <- round(raw_result[, 2:4], 4)*100
# gt final table
raw_result %>%
group_by(Subtitle) %>%
gt() %>%
tab_header( # Title
title = "Table 27. Summary statistics of selected variables in the portfolios of hypothetical CRE loans",
subtitle = "Percent as a share of utilized balance, except as noted"
) %>%
cols_width( # Set width of each columns
Variables ~ px(283),
ends_with("k") ~ px(94.5),
Typical ~ px(94.5)
) %>%
cols_align_decimal( # Align numbers by decimal point
columns = c("Lower-risk", "Typical", "Higher-risk"),
dec_mark = "."
) %>%
cols_align( # Align numbers to the center.
align = "center",
columns = c("Lower-risk", "Typical", "Higher-risk")
) %>%
tab_style( # for main title
style = list(
cell_text(
font = "Franklin Gothic",
align = "left",
size = "12px",
)
),
locations = cells_title(
groups = "title"
)
) %>%
tab_style( # for subtitle
style = list(
cell_text(
font = "Franklin Gothic",
align = "left",
size = "10px",
)
),
locations = cells_title(
groups = "subtitle"
)
) %>%
tab_style( # Column Names
style = list(
cell_text(
font = "Franklin Gothic Condensed",
size = "10px",
align = "center",
v_align = "bottom",
weight = "bolder"
),
cell_borders(
sides = "left",
color = "#00548b",
weight = px(1)
),
cell_fill(
color = "#e6e7e9"
)
),
locations = cells_column_labels(columns = c("Variables", "Lower-risk", "Typical",
"Higher-risk"))
) %>%
tab_style( # For Row Groups
style = list(
cell_text(
font = "Franklin Gothic Condensed",
size = "11px",
color = "#2f6195",
weight = "bolder",
indent = "6px"),
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
)
),
locations = cells_row_groups(groups = raw_result$Subtitle)
) %>%
tab_style( # For Variables Column
style = list(
cell_text(
weight = "lighter",
indent = "16px"
),
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
),
cell_text(
font = "Franklin Gothic Condensed"
)
),
locations = cells_body(
columns = Variables
)
) %>%
tab_style( # For Numeric Columns
style = list(
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
),
cell_text(
font = "Franklin Gothic Condensed",
weight = "lighter"
)
),
locations = cells_body(
columns = c("Lower-risk", "Typical", "Higher-risk")
)
) %>%
tab_options(
heading.background.color = "#00548b",          #background color for title
heading.border.bottom.color = "#00548b",       #border between title and column names
column_labels.border.bottom.color = "#00548b", #border between column names and contents
column_labels.border.bottom.style = "solid",   #border type
column_labels.border.bottom.width = px(2),     #border width, set in 2
row_group.padding = px(3),                     #cell height for row groups
table.font.size = "10px",                      #general font size table wide otherwise specified
data_row.padding = px(3)                       #cell height for general contents
) %>%
opt_table_outline(style = "solid", width = px(3), color = "#00548b")# %>%  #table outline
#gtsave(filename = "tab27.html") # save gt into working directory
}
gt_table27(result_origination_balance, result_collateral_value, result_property_type,
result_census_regions, result_origination_year)
7.5/3
16.5-7.5
gt_table27 <- function(...){
x <- list(...)
# Bind every provide table by row
raw_result <- rbind(...)
# Round to 4, and convert it percentage
raw_result[, 2:4] <- round(raw_result[, 2:4], 4)*100
# gt final table
raw_result %>%
group_by(Subtitle) %>%
gt() %>%
tab_header( # Title
title = "Table 27. Summary statistics of selected variables in the portfolios of hypothetical CRE loans",
subtitle = "Percent as a share of utilized balance, except as noted"
) %>%
cols_width( # Set width of each columns
Variables ~ px(340),
ends_with("k") ~ px(94.5),
Typical ~ px(94.5)
) %>%
cols_align_decimal( # Align numbers by decimal point
columns = c("Lower-risk", "Typical", "Higher-risk"),
dec_mark = "."
) %>%
cols_align( # Align numbers to the center.
align = "center",
columns = c("Lower-risk", "Typical", "Higher-risk")
) %>%
tab_style( # for main title
style = list(
cell_text(
font = "Franklin Gothic",
align = "left",
size = "12px",
)
),
locations = cells_title(
groups = "title"
)
) %>%
tab_style( # for subtitle
style = list(
cell_text(
font = "Franklin Gothic",
align = "left",
size = "10px",
)
),
locations = cells_title(
groups = "subtitle"
)
) %>%
tab_style( # Column Names
style = list(
cell_text(
font = "Franklin Gothic Condensed",
size = "10px",
align = "center",
v_align = "bottom",
weight = "bolder"
),
cell_borders(
sides = "left",
color = "#00548b",
weight = px(1)
),
cell_fill(
color = "#e6e7e9"
)
),
locations = cells_column_labels(columns = c("Variables", "Lower-risk", "Typical",
"Higher-risk"))
) %>%
tab_style( # For Row Groups
style = list(
cell_text(
font = "Franklin Gothic Condensed",
size = "11px",
color = "#2f6195",
weight = "bolder",
indent = "6px"),
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
)
),
locations = cells_row_groups(groups = raw_result$Subtitle)
) %>%
tab_style( # For Variables Column
style = list(
cell_text(
weight = "lighter",
indent = "16px"
),
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
),
cell_text(
font = "Franklin Gothic Condensed"
)
),
locations = cells_body(
columns = Variables
)
) %>%
tab_style( # For Numeric Columns
style = list(
cell_borders(
sides = c("top", "bottom"),
color = "#00548b",
weight = px(1)
),
cell_text(
font = "Franklin Gothic Condensed",
weight = "lighter"
)
),
locations = cells_body(
columns = c("Lower-risk", "Typical", "Higher-risk")
)
) %>%
tab_options(
heading.background.color = "#00548b",          #background color for title
heading.border.bottom.color = "#00548b",       #border between title and column names
column_labels.border.bottom.color = "#00548b", #border between column names and contents
column_labels.border.bottom.style = "solid",   #border type
column_labels.border.bottom.width = px(2),     #border width, set in 2
row_group.padding = px(3),                     #cell height for row groups
table.font.size = "10px",                      #general font size table wide otherwise specified
data_row.padding = px(3)                       #cell height for general contents
) %>%
opt_table_outline(style = "solid", width = px(3), color = "#00548b")# %>%  #table outline
#gtsave(filename = "tab27.html") # save gt into working directory
}
library(dplyr)
library(gt)
setwd("D:/FED_Assignment")
# Import data
high_risk <- read.csv("cre-high-risk-2022.csv")
low_risk <- read.csv("cre-low-risk-2022.csv")
typ_risk <- read.csv("cre-typical-risk-2022.csv")
# Calculate statistics
value <- function(table_by_filter, table){
value <- sum(table_by_filter$outstanding_balance_amt)/
sum(table$outstanding_balance_amt)
return(value)
}
gt_table27(result_origination_balance, result_collateral_value, result_property_type,
result_census_regions, result_origination_year)
library(dplyr)
library(gt)
setwd("D:/FED_Assignment")
gt_table27(result_origination_balance, result_collateral_value, result_property_type,
result_census_regions, result_origination_year)
View(low_risk)
reticulate::repl_python()
print("hello world!")
y
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
detach(reticulate)
detach("reticulate")
py_config()
shiny::runApp('D:/Power_calc/pwr_calculator')
install.packages("pwr")
runApp('D:/Power_calc/pwr_calculator')
install.packages("plotly")
source('all_sessions_udfs.R', local = T)
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
runApp('D:/Power_calc/pwr_calculator')
renv::snapshot()
update.packages()
install.packages(tidyverse)
install.packages("tidyverse")
shiny::runApp('D:/Power_calc/pwr_calculator')
